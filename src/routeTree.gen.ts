/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CardsIndexRouteImport } from './routes/cards/index'
import { Route as CardsIdRouteImport } from './routes/cards/$id'
import { Route as CardsRegisterIndexRouteImport } from './routes/cards/register/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsIndexRoute = CardsIndexRouteImport.update({
  id: '/cards/',
  path: '/cards/',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsIdRoute = CardsIdRouteImport.update({
  id: '/cards/$id',
  path: '/cards/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsRegisterIndexRoute = CardsRegisterIndexRouteImport.update({
  id: '/cards/register/',
  path: '/cards/register/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cards/$id': typeof CardsIdRoute
  '/cards': typeof CardsIndexRoute
  '/cards/register': typeof CardsRegisterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cards/$id': typeof CardsIdRoute
  '/cards': typeof CardsIndexRoute
  '/cards/register': typeof CardsRegisterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cards/$id': typeof CardsIdRoute
  '/cards/': typeof CardsIndexRoute
  '/cards/register/': typeof CardsRegisterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cards/$id' | '/cards' | '/cards/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cards/$id' | '/cards' | '/cards/register'
  id: '__root__' | '/' | '/cards/$id' | '/cards/' | '/cards/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CardsIdRoute: typeof CardsIdRoute
  CardsIndexRoute: typeof CardsIndexRoute
  CardsRegisterIndexRoute: typeof CardsRegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/': {
      id: '/cards/'
      path: '/cards'
      fullPath: '/cards'
      preLoaderRoute: typeof CardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/$id': {
      id: '/cards/$id'
      path: '/cards/$id'
      fullPath: '/cards/$id'
      preLoaderRoute: typeof CardsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/register/': {
      id: '/cards/register/'
      path: '/cards/register'
      fullPath: '/cards/register'
      preLoaderRoute: typeof CardsRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CardsIdRoute: CardsIdRoute,
  CardsIndexRoute: CardsIndexRoute,
  CardsRegisterIndexRoute: CardsRegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
